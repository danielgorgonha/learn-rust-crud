{
	"info": {
		"_postman_id": "learn-rust-crud-collection",
		"name": "Learn Rust CRUD API",
		"description": "Coleção do Postman para testar a API CRUD em Rust com autenticação JWT",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Faz login e retorna access_token e refresh_token"
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh_token\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/refresh",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"refresh"
							]
						},
						"description": "Renova o access_token usando o refresh_token"
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"logout"
							]
						},
						"description": "Faz logout invalidando o refresh_token"
					},
					"response": []
				}
			],
			"description": "Endpoints de autenticação"
		},
		{
			"name": "CRUD Operations",
			"item": [
				{
					"name": "Create Data",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data1\": [\"texto1\", \"texto2\", \"texto3\"],\n    \"data2\": [1, 2, 3, 4, 5]\n}"
						},
						"url": {
							"raw": "{{base_url}}/data",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"data"
							]
						},
						"description": "Cria um novo registro de dados"
					},
					"response": []
				},
				{
					"name": "Read All Data",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/data",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"data"
							]
						},
						"description": "Lista todos os registros de dados do usuário autenticado"
					},
					"response": []
				},
				{
					"name": "Read Data by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/data/{{data_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"data",
								"{{data_id}}"
							]
						},
						"description": "Busca um registro específico pelo ID"
					},
					"response": []
				},
				{
					"name": "Update Data",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data1\": [\"texto_atualizado1\", \"texto_atualizado2\"],\n    \"data2\": [10, 20, 30]\n}"
						},
						"url": {
							"raw": "{{base_url}}/data/{{data_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"data",
								"{{data_id}}"
							]
						},
						"description": "Atualiza um registro existente"
					},
					"response": []
				},
				{
					"name": "Delete Data",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/data/{{data_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"data",
								"{{data_id}}"
							]
						},
						"description": "Remove um registro pelo ID"
					},
					"response": []
				}
			],
			"description": "Operações CRUD básicas"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Script para capturar automaticamente o access_token após login",
					"if (pm.response.code === 200) {",
					"    const responseJson = pm.response.json();",
					"    if (responseJson.access_token) {",
					"        pm.environment.set('access_token', responseJson.access_token);",
					"        console.log('Access token salvo automaticamente');",
					"    }",
					"    if (responseJson.refresh_token) {",
					"        pm.environment.set('refresh_token', responseJson.refresh_token);",
					"        console.log('Refresh token salvo automaticamente');",
					"    }",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://127.0.0.1:8080",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "refresh_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "data_id",
			"value": "",
			"type": "string"
		}
	]
} 